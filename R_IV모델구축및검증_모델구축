#=============================================================================
# data_seoul 파일 불러오기
#=============================================================================
data_seoul <- read.csv("data_seoul_dv.csv")
#=============================================================================
# 선형관계의 강도를 수치로 객관화하기 위해 상관계수를 알아보기
#=============================================================================
cor(data_seoul[,-1])
#=============================================================================
# 상관계수에 대한 유의성 검증(cor.test()함수가 있음)
# cor.test는 두개 이상의 상관계수를 동시에 검증하기는 어려움 
# 두개 이상의 상관계수를 동시에 검증하기 위해 요인 분석이 가능한 패키지 설치 및 로딩
#=============================================================================
install.packages("psych")
library(psych)
corr.test(data_seoul[-1])
#=============================================================================

#=============================================================================
# data_seoul 파일 불러오기
#=============================================================================
data_seoul <- read.csv("data_seoul_dv.csv")
data_seoul <- data_seoul[,-1]
#=============================================================================
# 변수들의 측정 단위가 다르고 변동폭이 크므로 평균 0, 표준편차 1로 데이터 표준화하기
# scale()함수는 matrix타입을 반환하므로 데이터프레임으로 변환하기
#=============================================================================
data_seoul_scaled <- scale(data_seoul)
data_seoul_scaled<-as.data.frame(data_seoul_scaled)
#=============================================================================
#다중회귀분석을 실시하여 범죄율과 각 변수들간의 인과관계를 파악하기
#=============================================================================
summary(lm(formula = crime~police+cctv+one_person+pub, data_seoul_scaled))
#=============================================================================

#=============================================================================
# data_seoul 파일 불러오기
#=============================================================================
data_seoul <- read.csv("data_seoul_dv.csv")
data_seoul <- data_seoul[,-1]
#=============================================================================
# 변수들의 측정 단위가 다르고 변동폭이 크므로 평균 0, 표준편차 1로 데이터 표준화하기
# scale()함수는 matrix타입을 반환하므로 데이터프레임으로 변환하기
#=============================================================================
data_seoul_scaled <- scale(data_seoul)
#scale()함수는 matrix타입을 반환하므로 데이터프레임으로 변환
data_seoul_scaled<-as.data.frame(data_seoul_scaled)
str(data_seoul_scaled)
#=============================================================================
# 유의확률 확인하기 위해 회귀분석 진행
#=============================================================================
summary(lm(formula = crime~police+cctv+one_person+pub, data_seoul))
#=============================================================================
#유의확률이 가장 높은 police를 제거하고 다시 회귀모형 생성
#=============================================================================
summary(lm(formula = crime~cctv+one_person+pub, data_seoul_scaled))
#=============================================================================
#유의확률이 가장 높은 one_person을 제거하고 다시 회귀모형 생성
#=============================================================================
summary(lm(formula = crime~cctv+pub, data_seoul_scaled))
#=============================================================================
#=>Pub,CCTV,Oneperson조합이 가장 수정된 결정계수 크고 P-value작으므로 최적

#벌점화 전진선택법(AIC가 가장 작은 변수를 하나씩 더함)
#===============================================================================================================================
step(lm(crime~cctv, data=data_seoul_scaled),scope = list(lower=~cctv,upper=~cctv+one_person+pub+police), direction = 'forward')
#===============================================================================================================================
#=>Crime~CCTV+Pub+Oneperson가 AIC(모델의 상태적 품질을 평가하는 척도, 최소가 되는 모형을 선택해야 함)값이 가장 낮아지므로 최적

#벌점화 후진제거법(AIC가 가장 큰 변수를 하나씩 제거)
#==================================================================================================
step(lm(crime~cctv+one_person+pub+police, data=data_seoul_scaled), cctv~1, direction = 'backward')
#==================================================================================================
#=>다른 방법과 동일한 결과
