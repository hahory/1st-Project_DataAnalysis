finalData<-read.csv('data_comb.csv')
finalData<-finalData[,-1]
finalData$Police<-round(finalData$Police,2)
finalData$CCTV<-round(finalData$CCTV)
head(finalData)#head()를 통해 변수들을 확인
str(finalData)#데이터의 모양을 확인
#finalData$Oneperson<-as.numeric(finalData$Oneperson)
#finalData$Pub<-as.numeric(finalData$Pub)
#finalData$Crime<-as.numeric(finalData$Crime)
install.packages('Hmisc')#기술통계정보를 알려주는 패키지 설치
library(Hmisc)
describe(finalData)#summary()와 유사하나 좀 더 다양한 요약정보를 제시
summary(finalData)#데이터의 간략한 분포 정보 확인
summary(Crime~Pub,finalData)
plot(finalData)#plot()은 데이터를 크게 신경쓰지 않고 넘겨주어도 자동으로 적절한 형태의 그래프를 찾아줌
plot(finalData$Crime)
plot(Crime~Pub, data=finalData)
library(caret)#caret의 featurePlot은 피처와 분류 간의 관련성을 쉽게 시각화해주는 함수-우리 데이터에는 별로..
featurePlot(x=finalData[,3:6],y=finalData$Police,plot='ellipse')
------------------------------------------------------------------------
# kmeans cluster
dataSeoul <- read.csv("data_comb.csv")
dataSeoul <- dataSeoul[, -c(1:3)]#Police도 변수에서 제거
str(dataSeoul)
head(dataSeoul)
# 변수들의 측정  단위가 다르고 변동폭이 크므로 평균 0, 표준편차 1로 표준화
# scale()은 수치형만 넣어야하므로 'District'열 제거 후 표준화 진행
dataSeoul_scaled <- scale(dataSeoul)
#원래는 분석자가 최적의 군집개수를 미리 설정해줘야 하나 더 객관화된 군집개수를 사용하기 위해 지표를 제공하는 패키지 이용
# NbClust패키지: 최적의 군집개수를 알려주는 다양한 지표를 제공
install.packages("NbClust")
library(NbClust)
#처음의 K개의 군집 중심점을 임의로 선택하므로 K평균군집을 수행할 때마다 다른 결과를 얻을 수 있음
#실행할 때마다 동일한 결과가 나오도록 set.seed넘버를 지정
set.seed(123)
# 2-15개 사이의 군집을 탐색
#각 지표가 추천하는 군집의 개수가 행렬형식으로 저장됨
nc <- NbClust(dataSeoul_scaled, distance = "euclidean", method = "kmeans", min.nc = 2, max.nc = 15)
nc$Best.nc
table(nc$Best.nc[1, ])
#4개의 군집으로 나누는 것이 최적이라고 6개의 지표들이 판단했음
# 제안한 최적의 군집수(3개)로 데이터셋 분할
set.seed(123)
# nstart개수를 지정하면 지정된 횟수만큼 군집분석을 수행해서 그 가운데 최적의 분할 결과 도출->보다 안정적인 군집 분할 결과를 얻을 수 있음
clustering_dataSeoul <- kmeans(dataSeoul_scaled, centers = 3, nstart = 25)
clustering_dataSeoul$cluster # 각 구별 소속군집
clustering_dataSeoul$centers # 최종 군집 중심점을 바탕의 각 군집의 특성을 유추할 수 있음
# 3군집은 1인 가구 많은데 비해 cctv수는 적절할까?를 확인해 볼 필요있음
clustering_dataSeoul$size # 각 군집의 크기
#각 군집의 중심점은 표준화된 값으로 계산되므로 실제 측정단위로 된 평균값은 알 수 없음
#원래 값으로 계산된 속성 평균을 알기 위해서는 aggregate()함수 이용
str(dataSeoul)
#평균을 알기 위해선 문자열을 포함하는 District열은 제외
#clustering_dataSeoul$centers와 aggregate()함수 이용한 평균값에서 해석 차이가 많이 나는 이유는?????????????
aggregate(dataSeoul,
        by=list(cluster=clustering_dataSeoul$cluster),mean)
#군집화 결과를 그래프로 나타내보기
library(cluster)
clusplot(x=dataSeoul,clus=clustering_dataSeoul$cluster,color=TRUE,shade=TRUE,labels=2,lines=0,main='Cluster Plot')


#두번째 군집분석 진행
dataSeoul_2nd<-dataSeoul[c(1,5,6,7,8,11,12,14,16,17,19,20,25),]
head(dataSeoul_2nd)
dataSeoul_2nd_scaled <- scale(dataSeoul_2nd)
set.seed(123)
library(NbClust)
nc <- NbClust(dataSeoul_2nd_scaled, distance = "euclidean", method = "kmeans", min.nc = 2, max.nc = 10)
nc$Best.nc
table(nc$Best.nc[1, ])
set.seed(123)
clustering_dataSeoul_2nd <- kmeans(dataSeoul_2nd_scaled, centers = 4, nstart = 25)
clustering_dataSeoul_2nd$cluster
clustering_dataSeoul_2nd$centers 
clustering_dataSeoul_2nd$size
library(cluster)
clusplot(x=dataSeoul,clus=clustering_dataSeoul$cluster,color=TRUE,shade=TRUE,labels=2,lines=0,main='Cluster Plot')
